#!/usr/bin/expect

spawn $env(SHELL)

Feature: "Delete"

Scenario: "Delete a project" {
  set delete1 [prefixed_project delete1]
  create_project $delete1

  send "$::bin delete\r"
  expect {
    timeout { handle_timeout; break }
    "Please*select*a project or a service"
  }
  expect {
    timeout { handle_timeout; break }
    "Type project/service ID or service #"
  }
  send "$delete1\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Enter the project ID*$delete1*to delete it permanently"
  }
  send "$delete1\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Deleting project*$delete1"
  }
  send "$::bin curl /projects/$delete1\r"
  expect {
    timeout { handle_timeout; break }
    "Project does not exist."
  }
}

Scenario: "Delete a service" {
  set delete2 [prefixed_project delete2]
  create_project $delete2
  create_service $delete2 hosting1
  create_service $delete2 hosting2

  send "$::bin delete\r"
  expect {
    timeout { handle_timeout; break }
    "Please*select*a project or a service"
  }
  expect {
    timeout { handle_timeout; break }
    "Type project/service ID or service #"
  }
  send "hosting1\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Enter the service ID*hosting1*to delete it permanently"
  }
  send "hosting1\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Deleting service*hosting1*on project*$delete2"
  }
  send "$::bin curl /projects/$delete2/services/hosting1\r"
  expect {
    timeout { handle_timeout; break }
    "Service $delete2/hosting1 does not exist."
  }
  assert_service_exists $delete2 hosting2
} { delete_project $delete2 }

Scenario: "Delete a project with -p flag" {
  set delete3 [prefixed_project delete3]
  set delete4 [prefixed_project delete4]
  create_project $delete3
  create_project $delete4

  send "$::bin delete -p $delete4\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Enter the project ID*$delete4*to delete it permanently"
  }
  send "$delete4\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Deleting project*$delete4"
  }
  send "$::bin curl /projects/$delete4\r"
  expect {
    timeout { handle_timeout; break }
    "Project does not exist."
  }
  send "$::bin curl /projects/$delete3\r"
  expect {
    timeout { handle_timeout; break }
    -gl "\"projectId\"*: *\"$delete3\""
  }
} { delete_project $delete3 }

Scenario: "Delete a service with -p and -s flags" {
  set delete5 [prefixed_project delete5]
  create_project $delete5
  create_service $delete5 hosting1
  create_service $delete5 hosting2

  send "$::bin delete -p $delete5 -s hosting1\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Enter the service ID*hosting1*to delete it permanently"
  }
  send "hosting1\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Deleting service*hosting1*on project*$delete5"
  }
  send "$::bin curl /projects/$delete5/services/hosting1\r"
  expect {
    timeout { handle_timeout; break }
    "Service $delete5/hosting1 does not exist."
  }
  assert_service_exists $delete5 hosting2
} { delete_project $delete5 }

Scenario: "Delete a project with -e flag" {
  set delete6 [prefixed_project delete6]
  create_project $delete6
  create_project $delete6-uat true

  send "$::bin delete -p $delete6 -e uat\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Enter the project ID*$delete6-uat*to delete it permanently"
  }
  send "$delete6-uat\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Deleting project*$delete6-uat"
  }
  send "$::bin curl /projects/$delete6-uat\r"
  expect {
    timeout { handle_timeout; break }
    "Project does not exist."
  }
  send "$::bin curl /projects/$delete6\r"
  expect {
    timeout { handle_timeout; break }
    -gl "\"projectId\"*: *\"$delete6\""
  }
} { delete_project $delete6 }

Scenario: "Delete a service with -e flag" {
  set delete7 [prefixed_project delete7]
  create_project $delete7
  create_project $delete7-dev true
  create_service $delete7 hosting1
  create_service $delete7-dev hosting2

  send "$::bin delete -p $delete7 -e dev -s hosting2\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Enter the service ID*hosting2*to delete it permanently"
  }
  send "hosting2\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Deleting service*hosting2*on project*$delete7-dev"
  }
  send "$::bin curl /projects/$delete7-dev/services/hosting2\r"
  expect {
    timeout { handle_timeout; break }
    "Service $delete7-dev/hosting2 does not exist."
  }
  assert_service_exists $delete7 hosting1
} { delete_project $delete7 }
