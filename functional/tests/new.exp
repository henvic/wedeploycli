#! /usr/bin/expect

spawn $env(SHELL)

#####################################################
Feature: "New"
#####################################################

Scenario: "Cannot `we new` without signing in" {
  logout $::_tester(email)

  send "we new\r"
  expect {
    timeout { handle_timeout; break }
    "You need to log in before using \"we new\"."
  }
  expect {
    timeout { handle_timeout; break }
    "Open your browser and authenticate?"
  }
  send "n\r"
  expect {
    timeout { handle_timeout; break }
    "Login canceled."
  }
}

Scenario: "Create a project and service" {
  login $::_tester(email) $::_tester(pw)

  send "we new\r"
  expect {
    timeout { handle_timeout; break }
    "Do you want to*create*a new project or install a new service?"
  }
  send "1\r"
  expect {
    timeout { handle_timeout; break }
    "Choose a project ID"
  }
  send "new1\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Project*new1*created"
  }
  send "we new\r"
  expect {
    timeout { handle_timeout; break }
    "Do you want to*create*a new project or install a new service?"
  }
  send "2\r"
  expect {
    timeout { handle_timeout; break }
    "Please*select*a project from the list below."
  }
  expect {
    timeout { handle_timeout; break }
    "Type project ID or #"
  }
  send "new1\r"
  expect {
    timeout { handle_timeout; break }
    "Choose a Service ID"
  }
  send "hosting1\r"
  expect {
    timeout { handle_timeout; break }
    "Select a Service Type"
  }
  send "4\r"
  expect {
    timeout { handle_timeout; break }
    "Service*hosting1-new1.wedeploy.sh*created"
  }
  assert_service_exists new1 hosting1
} { delete_project new1 }

Scenario: "Create a project with `we new project`" {
  login $::_tester(email) $::_tester(pw)

  send "we new project\r"
  expect {
    timeout { handle_timeout; break }
    "Choose a project ID"
  }
  send "new2\r"
  expect {
    timeout { handle_timeout; break }
    "Project*new2*created"
  }
} { delete_project new2 }

Scenario: "Create a service with `we new service`" {
  login $::_tester(email) $::_tester(pw)
  create_project new3

  send "we new service\r"
  expect {
    timeout { handle_timeout; break }
    "Please*select*a project from the list below."
  }
  send "1\r"
  expect {
    timeout { handle_timeout; break }
    "Choose a Service ID"
  }
  send "hosting1\r"
  expect {
    timeout { handle_timeout; break }
    "Select a Service Type"
  }
  send "4\r"
  expect {
    timeout { handle_timeout; break }
    "Service*hosting1-new3.wedeploy.sh*created"
  }
  assert_service_exists new3 hosting1
} { delete_project new3 }

#####################################################
TearDownFeature: "New"
#####################################################
