#!/usr/bin/expect

spawn $env(SHELL)

Feature: "New"

Scenario: "Create a project and service" {
  set new1 [prefixed_project new1]
  send "$::bin new\r"
  expect {
    timeout { handle_timeout; break }
    "Do you want to*create*a new project or install a new service?"
  }
  send "1\r"
  expect {
    timeout { handle_timeout; break }
    "Choose a project ID"
  }
  send "$new1\r"
  expect {
    timeout { handle_timeout; break }
    -gl "Project*$new1*created"
  }
  send "$::bin new\r"
  expect {
    timeout { handle_timeout; break }
    "Do you want to*create*a new project or install a new service?"
  }
  send "2\r"
  expect {
    timeout { handle_timeout; break }
    "Please*select*a project from the list below."
  }
  expect {
    timeout { handle_timeout; break }
    "Type project ID or #"
  }
  send "$new1\r"
  expect {
    timeout { handle_timeout; break }
    "Choose a Service ID"
  }
  send "hosting1\r"
  expect {
    timeout { handle_timeout; break }
    "Select a Service Type"
  }
  send "4\r"
  expect {
    timeout { handle_timeout; break }
    "Service*hosting1-$new1.$::service_domain*created"
  }
  assert_service_exists $new1 hosting1
} { delete_project $new1 }

Scenario: "Create a project with `$::bin new project`" {
  set new2 [prefixed_project new2]
  send "$::bin new project\r"
  expect {
    timeout { handle_timeout; break }
    "Choose a project ID"
  }
  send "$new2\r"
  expect {
    timeout { handle_timeout; break }
    "Project*$new2*created"
  }
} { delete_project $new2 }

Scenario: "Create a service with `$::bin new service`" {
  set new3 [prefixed_project new3]
  create_project $new3

  send "$::bin new service\r"
  expect {
    timeout { handle_timeout; break }
    "Please*select*a project from the list below."
  }
  send "1\r"
  expect {
    timeout { handle_timeout; break }
    "Choose a Service ID"
  }
  send "hosting1\r"
  expect {
    timeout { handle_timeout; break }
    "Select a Service Type"
  }
  send "4\r"
  expect {
    timeout { handle_timeout; break }
    "Service*hosting1-$new3.$::service_domain*created"
  }
  assert_service_exists $new3 hosting1
} { delete_project $new3 }
